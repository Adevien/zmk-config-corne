#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT  0
#define LOWER    1
#define RAISE    2
#define CONTROL   3

// dt-formatter: indent = "  "
// dt-formatter: reindentMultilineIntegerCells = "dedent"

&led_strip {
  chain-length = <27>;

  // 21 backlight + 6 glowlight
};

/ {
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <150>;
      quick-tap-ms = <0>;
      flavor = "tap-preferred";
      bindings =
        <&kp>,
        <&kp>;
    };
  };

  combos {
    compatible = "zmk,combos";

    Capslock {
      bindings = <&caps_word>;
      key-positions = <17 18>;
    };

    Screenshot {
      bindings = <&kp LS(LG(N4))>;
      key-positions = <3 12 36>;
    };

    Fullzoom_Window {
      bindings = <&kp LS(LC(LG(ENTER)))>;
      key-positions = <1 2>;
    };

    Switch_Window {
      bindings = <&kp LG(GRAVE)>;
      key-positions = <25 26>;
    };

    Switch_Input_Source {
      bindings = <&kp LC(LA(SPACE))>;
      key-positions = <11 10>;
    };

    Key_Space {
      bindings = <&kp SPACE>;
      key-positions = <28 29>;
    };

    Key_Enter {
      bindings = <&kp ENTER>;
      key-positions = <16 17>;
    };

    Key_Alt {
      bindings = <&kp LEFT_ALT>;
      key-positions = <36 37>;
    };

    To_Layer1 {
      bindings = <&to 0>;
      key-positions = <0 1>;
    };

    To_Layer2 {
      bindings = <&to 1>;
      key-positions = <0 2>;
    };

    To_Layer3 {
      bindings = <&to 2>;
      key-positions = <0 3>;
    };

    To_Layer4 {
      bindings = <&to 3>;
      key-positions = <0 4>;
    };

    Mo_Layer4 {
      bindings = <&mo 3>;
      key-positions = <11 7>;
    };

    Clear_BLE_Profile {
      bindings = <&bt BT_CLR>;
      key-positions = <0 38 5>;
    };
  };

  macros {
  };

  keymap {
    compatible = "zmk,keymap";

    base_layer {
      label = "BASE";
      bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T       &kp Y      &kp U  &kp I      &kp O    &kp P     &kp ESCAPE
&kp LSHFT  &kp A  &kp S  &kp D     &kp F  &kp G       &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V  &kp B       &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp LEFT_ALT
                         &kp LGUI  &mo 2  &kp BSPC    &kp SPACE  &mo 1  &kp RET
      >;
    };

    extended_layer {
      label = "EXT";
      bindings = <
&mo 1      &kp N1  &kp N2  &kp N3    &kp N4  &kp N5      &kp N6     &kp N7    &kp N8     &kp N9     &kp N0   &trans
&kp LSHFT  &trans  &trans  &trans    &trans  &trans      &kp LEFT   &kp DOWN  &kp UP     &kp RIGHT  &trans   &trans
&trans     &kp F1  &kp F2  &kp F3    &kp F4  &kp F5      &kp F6     &kp F7    &kp F8     &kp F9     &kp F10  &trans
                           &kp LGUI  &trans  &kp BSPC    &kp SPACE  &trans    &kp ENTER
      >;
    };

    code_layer {
      label = "CODE";
      bindings = <
&trans     &kp BACKSLASH  &kp PIPE   &trans          &kp LPAR          &kp RPAR           &trans     &trans     &trans         &trans  &trans  &mo 2
&kp LSHFT  &kp PLUS       &kp MINUS  &kp UNDERSCORE  &kp LBKT          &kp RBKT           &trans     &kp PG_UP  &kp PAGE_DOWN  &trans  &trans  &trans
&kp LCTRL  &kp GRAVE      &kp TILDE  &kp EQUAL       &kp LEFT_BRACE    &kp RIGHT_BRACE    &trans     &trans     &trans         &trans  &trans  &trans
                                     &kp LEFT_ALT    &kp LEFT_COMMAND  &kp BACKSPACE      &kp SPACE  &trans     &kp ENTER
      >;
    };

    control_layer {
      label = "CONTROL";
      bindings = <
&bt BT_SEL 0      &bt BT_SEL 1  &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4          &trans                  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SPD  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF  &rgb_ug RGB_TOG
&trans            &trans        &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC    &trans           &trans           &trans           &trans           &trans           &trans
&kp C_PLAY_PAUSE  &kp C_PREV    &kp C_NEXT       &kp K_MUTE       &kp C_VOL_DN          &kp C_VOL_UP            &trans           &trans           &trans           &trans           &trans           &trans
                                                 &trans           &trans                &trans                  &trans           &trans           &trans
      >;
    };
  };
};
