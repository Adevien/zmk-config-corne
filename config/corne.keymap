#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT  0
#define LOWER    1
#define RAISE    2
#define CONTROL   3

// dt-formatter: indent = "  "
// dt-formatter: reindentMultilineIntegerCells = "dedent"

&led_strip {
  chain-length = <27>;

  // 21 backlight + 6 glowlight
};

/ {
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <150>;
      quick-tap-ms = <0>;
      flavor = "tap-preferred";
      bindings =
        <&kp>,
        <&kp>;
    };
  };

  combos {
    compatible = "zmk,combos";

    Capslock {
      bindings = <&caps_word>;
      key-positions = <17 18>;
    };

    Backspace {
      bindings = <&kp BACKSPACE>;
      key-positions = <32 33>;
    };

    Screenshot {
      bindings = <&kp LS(LG(N4))>;
      key-positions = <3 4>;
    };

    Fullzoom_Window {
      bindings = <&kp LS(LC(LG(ENTER)))>;
      key-positions = <1 2>;
    };

    Switch_Window {
      bindings = <&kp LG(GRAVE)>;
      key-positions = <25 26>;
    };

    Switch_Input_Source {
      bindings = <&kp LC(LA(SPACE))>;
      key-positions = <11 10>;
    };

    Pg_Up {
      bindings = <&kp PAGE_UP>;
      key-positions = <1 13>;
    };

    Pg_Down {
      bindings = <&kp PAGE_DOWN>;
      key-positions = <13 25>;
    };

    Space {
      bindings = <&kp SPACE>;
      key-positions = <28 29>;
    };
  };

  macros {
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      label = "BASE";
      bindings = <
&kp TAB    &kp Q  &kp W  &kp E         &kp R     &kp T       &kp Y      &kp U    &kp I      &kp O    &kp P     &kp ESC
&kp LSHFT  &kp A  &kp S  &kp D         &kp F     &kp G       &kp H      &kp J    &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C         &kp V     &kp B       &kp N      &kp M    &kp COMMA  &kp DOT  &kp FSLH  &mo 2
                         &kp LEFT_ALT  &kp LGUI  &kp BSPC    &kp SPACE  &kp RET  &mo 1
      >;
    };

    lower_layer {
      label = "LOWER";
      bindings = <
&trans     &kp N1     &kp N2     &kp N3        &kp N4            &kp N5           &kp N6     &kp N7     &kp N8  &kp N9     &kp N0   &trans
&kp LSHFT  &kp ASTRK  &kp SLASH  &kp PLUS      &kp MINUS         &kp EQUAL        &kp LEFT   &kp DOWN   &kp UP  &kp RIGHT  &trans   &trans
&kp LCTRL  &kp F1     &kp F2     &kp F3        &kp F4            &kp F5           &kp F6     &kp F7     &kp F8  &kp F9     &kp F10  &trans
                                 &kp LEFT_ALT  &kp LEFT_COMMAND  &kp BACKSPACE    &kp SPACE  &kp ENTER  &trans
      >;
    };

    raise_layer {
      label = "RAISE";
      bindings = <
&tog 0     &kp EXCL        &kp AT           &kp HASH      &kp DLLR          &kp PRCNT        &kp CARET  &kp AMPS   &kp ASTERISK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LSHFT  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp PIPE      &trans            &trans           &kp MINUS  &kp EQUAL  &kp LBKT      &kp RBKT  &kp BSLH  &kp DOUBLE_QUOTES
&kp LCTRL  &kp GRAVE       &kp TILDE        &trans        &trans            &trans           &trans     &trans     &trans        &trans    &trans    &trans
                                            &kp LEFT_ALT  &kp LEFT_COMMAND  &kp BACKSPACE    &kp SPACE  &kp ENTER  &trans
      >;
    };

    control_layer {
      label = "CONTROL";
      bindings = <
&bt BT_SEL 0      &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3          &bt BT_SEL 4          &bt BT_CLR      &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SPD  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF  &rgb_ug RGB_TOG
&trans            &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans          &trans           &trans           &trans           &trans           &trans           &trans
&kp C_PLAY_PAUSE  &kp C_PREV       &kp C_NEXT       &kp K_MUTE            &kp C_VOL_DN          &kp C_VOL_UP    &trans           &trans           &trans           &trans           &trans           &trans
                                                    &trans                &trans                &trans          &kp SPACE        &trans           &trans
      >;
    };
  };
};
