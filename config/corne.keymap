#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

// dt-formatter: indent = "  "
// dt-formatter: reindentMultilineIntegerCells = "dedent"

&led_strip {
  chain-length = <27>;

  // 21 backlight + 6 glowlight
};

&mt {
  tapping-term-ms = <150>;
  flavor = "tap-preferred";
};

&sk {
  release-after-ms = <2000>;
  quick-release;
};

#define TAPPING_TERM 200

/ {
  behaviors {
    /*
    * td_media mimics the behavior of AirPods controls:
    *  - tap once for play / pause
    *  - tap twice for next track
    *  - tap three times for previous track
    */

    td_media: tap_dance_media {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_MEDIA";
      #binding-cells = <0>;
      tapping-term-ms = <TAPPING_TERM>;
      bindings = <&kp C_PLAY_PAUSE>, <&kp C_NEXT>, <&kp C_PREVIOUS>;
    };

    /*
    * td_lock groups locking functions into one key:
    *  - tap once to lock the host
    *  - tap twice to put the host to sleep
    */

    td_lock: tap_dance_lock {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_LOCK";
      #binding-cells = <0>;
      tapping-term-ms = <TAPPING_TERM>;
      bindings = <&kp LG(LC(Q))>, <&kp LG(LA(C_EJECT))>;
    };
  };

  combos {
    compatible = "zmk,combos";

    Clear_BLE_Profile {
      bindings = <&bt BT_CLR>;
      key-positions = <0 38 5>;
    };
  };

  macros {
    git_status: git_status {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&kp G &kp I &kp T &kp SPACE &kp S &kp T &kp A &kp T &kp U &kp S &kp ENTER>;
      label = "GIT_STATUS";
    };
    git_commit_all: git_commit_all {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&kp G &kp I &kp T &kp SPACE &kp C &kp O &kp M &kp M &kp I &kp T &kp SPACE &kp MINUS &kp A &kp MINUS &kp M &kp SPACE &kp DQT &kp DQT &kp LEFT_ARROW>;
      label = "GIT_COMMIT";
    };
  };

  keymap {
    compatible = "zmk,keymap";

    base_layer {
      label = "BASE";
      bindings = <
&mt LEFT_ALT TAB  &kp Q    &kp W  &kp E         &kp R        &kp T       &kp Y                   &kp U        &kp I                &kp O    &kp P        &mt RIGHT_ALT MINUS
&mt LSHFT ESCAPE  &kp A    &kp S  &kp D         &kp F        &kp G       &kp H                   &kp J        &kp K                &kp L    &kp SEMI     &mt RIGHT_SHIFT SINGLE_QUOTE
&mt LCTRL GRAVE   &lt 3 Z  &kp X  &kp C         &kp V        &lt 1 B     &lt 2 N                 &kp M        &kp COMMA            &kp DOT  &lt 3 SLASH  &mt RCTRL BACKSLASH
                                  &kp LEFT_GUI  &lt 2 SPACE  &kp BSPC    &mt LC(LS(LALT)) SPACE  &lt 1 EQUAL  &mt RIGHT_GUI ENTER
      >;
    };

    num_layer {
      label = "NUMBER";
      bindings = <
&trans    &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6    &kp N7     &kp N8     &kp N9     &kp N0  &trans
&kp CAPS  &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &trans  &trans
&trans    &trans  &trans  &trans  &trans  &trans    &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &trans  &trans
                          &trans  &trans  &trans    &trans    &trans     &trans
      >;
    };

    code_layer {
      label = "CODE";
      bindings = <
&trans  &kp EXCL    &kp AT            &kp HASH           &kp DLLR        &kp PRCNT          &kp CARET     &kp AMPS      &kp ASTERISK  &kp LPAR       &kp RPAR  &trans
&trans  &trans        &kp LEFT_BRACE  &kp RIGHT_BRACE &kp LEFT_BRACKET  &kp RIGHT_BRACKET   &kp LA(LEFT)  &kp LA(DOWN)  &kp LA(UP)    &kp LA(RIGHT)  &trans    &trans
&trans &trans  &trans  &trans  &trans  &trans      &trans        &trans        &trans        &trans         &trans    &trans
                                      &trans             &trans          &kp DELETE         &trans        &trans        &trans
      >;
    };

    extended_layer {
      label = "EXT";
      bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SPD  &rgb_ug RGB_SPI       &rgb_ug RGB_EFF       &trans
&trans  &trans        &td_media     &kp K_MUTE    &kp C_VOL_DN  &kp C_VOL_UP    &rgb_ug RGB_TOG  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans
&trans  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6           &kp F7           &kp F8           &kp F9                &kp F10               &kp F12
                                    &trans        &trans        &trans          &trans           &trans           &trans
      >;
    };
  };
};
